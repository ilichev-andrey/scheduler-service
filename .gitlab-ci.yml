stages:
  - build
  - test
  - release

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  TAG_CONTAINER_TEST_IMAGE: $CI_COMMIT_REF_SLUG-test
  CORE_CONTAINER: $CI_REGISTRY_IMAGE/scheduler-core
  TG_BOT_CONTAINER: $CI_REGISTRY_IMAGE/scheduler-telegram-bot

default:
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build:
  stage: build
  image: docker
  services:
    - docker:dind
  only:
    - master
  script:
    - docker pull $CORE_CONTAINER:latest
    - docker pull $TG_BOT_CONTAINER:latest
    - docker build --cache-from $CORE_CONTAINER:latest --tag $CORE_CONTAINER:$TAG_CONTAINER_TEST_IMAGE ./scheduler_core
    - docker build --cache-from $TG_BOT_CONTAINER:latest --tag $TG_BOT_CONTAINER:$TAG_CONTAINER_TEST_IMAGE ./scheduler_telegram_bot
    - docker push $CORE_CONTAINER:$TAG_CONTAINER_TEST_IMAGE
    - docker push $TG_BOT_CONTAINER:$TAG_CONTAINER_TEST_IMAGE

test:
  stage: test
  image: docker
  services:
    - docker:dind
  only:
    - master
  variables:
    LOG_FILE: /var/log/file.log
    API_CONNECTION_HOST: core
    API_CONNECTION_PORT: 3000
    TELEGRAM_API_TOKEN: token
    SERVER_HOST: core
    SERVER_PORT: 3000
    DATABASE_NAME: database_name
    DATABASE_USER: database_user
    DATABASE_PASSWORD: database_password
    DATABASE_HOST: database
    DATABASE_PORT: database_port
  script:
    - docker pull $CORE_CONTAINER:$TAG_CONTAINER_TEST_IMAGE
    - docker pull $TG_BOT_CONTAINER:$TAG_CONTAINER_TEST_IMAGE
    - docker run $CORE_CONTAINER:$TAG_CONTAINER_TEST_IMAGE python -m unittest discover -s tests/unit_tests -t ./
    - docker run $TG_BOT_CONTAINER:$TAG_CONTAINER_TEST_IMAGE python -m unittest discover -s tests/unit_tests -t ./

release:
  stage: release
  image: docker
  services:
    - docker:dind
  only:
    - master
  script:
    - docker pull $CORE_CONTAINER:$TAG_CONTAINER_TEST_IMAGE
    - docker pull $TG_BOT_CONTAINER:$TAG_CONTAINER_TEST_IMAGE
    - docker tag $CORE_CONTAINER:$TAG_CONTAINER_TEST_IMAGE $CORE_CONTAINER:latest
    - docker tag $TG_BOT_CONTAINER:$TAG_CONTAINER_TEST_IMAGE $TG_BOT_CONTAINER:latest
    - docker push $CORE_CONTAINER:latest
    - docker push $TG_BOT_CONTAINER:latest